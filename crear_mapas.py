import pygame


# clores
NEGRO = (0,0,0)
GRIS = (50,50,50)
AMARILLO = (255,255,0)
VERDE = (9, 217, 12)
MORADO = (150,25,200)
COLOR_PARED = (200,200,200)

# dimensiones
#"""
NX = 50
NY = 50
DIM = 15
"""
NX = 16 
NY = 16
DIM = 45
"""
ANCHURA = NX*DIM
ALTURA = NY*DIM


# inicio del juego
pygame.init()
paredes = [[0, 0], [735, 735], [0, 30], [0, 45], [0, 60], [0, 75], [0, 105], [0, 120], [0, 135], [0, 150], [0, 165], [0, 180], [0, 195], [0, 210], [0, 90], [0, 225], [0, 240], [0, 450], [0, 465], [0, 480], [0, 495], [0, 510], [0, 525], [0, 540], [0, 555], [0, 570], [0, 585], [0, 600], [0, 615], [0, 630], [0, 645], [0, 660], [0, 675], [0, 705], [0, 690], [30, 735], [45, 735], [60, 735], [75, 735], [90, 735], [105, 735], [120, 735], [135, 735], [150, 735], [165, 735], [180, 735], [195, 735], [210, 735], [225, 735], [240, 735], [255, 735], [270, 735], [285, 735], [450, 735], [465, 735], [480, 735], [495, 735], [510, 735], [525, 735], [540, 735], [555, 735], [570, 735], [585, 735], [600, 735], [615, 735], [630, 735], [645, 735], [660, 735], [675, 735], [690, 735], [705, 735], [735, 705], [735, 690], [735, 675], [735, 660], [735, 645], [735, 630], [735, 615], [735, 600], [735, 585], [735, 570], [735, 555], [735, 540], [735, 495], [735, 480], [735, 510], [735, 525], [735, 465], [735, 450], [390, 735], [375, 735], [360, 735], [345, 735], [735, 390], [735, 375], [735, 360], [735, 345], [735, 285], [735, 270], [735, 255], [735, 240], [735, 225], [735, 210], [735, 195], [735, 180], [735, 165], [735, 150], [735, 135], [735, 120], [735, 105], [735, 90], [735, 75], [735, 60], [735, 45], [735, 30], [705, 0], [690, 0], [675, 0], [660, 0], [645, 0], [630, 0], [615, 0], [600, 0], [585, 0], [570, 0], [555, 0], [540, 0], [525, 0], [510, 0], [450, 0], [465, 0], [480, 0], [495, 0], [0, 375], [0, 360], [0, 345], [0, 390], [0, 285], [0, 270], [0, 255], [30, 0], [45, 0], [60, 0], [75, 0], [90, 0], [105, 0], [120, 0], [135, 0], [150, 0], [165, 0], [180, 0], [195, 0], [255, 0], [240, 0], [225, 0], [210, 0], [270, 0], [285, 0], [390, 0], [375, 0], [360, 0], [345, 0], [270, 255], [285, 255], [300, 255], [315, 255], [330, 255], [345, 255], [390, 255], [405, 255], [420, 255], [435, 255], [450, 255], [465, 255], [480, 255], [480, 270], [480, 285], [480, 300], [480, 315], [480, 330], [480, 345], [480, 390], [480, 405], [480, 420], [480, 435], [480, 450], [480, 465], [480, 480], [465, 480], [450, 480], [420, 480], [405, 480], [390, 480], [345, 480], [330, 480], [315, 480], [300, 480], [285, 480], [270, 480], [255, 480], [255, 465], [255, 450], [255, 435], [255, 420], [255, 405], [255, 390], [255, 345], [255, 330], [255, 315], [255, 300], [255, 285], [255, 270], [255, 255], [435, 480], [390, 405], [405, 390], [405, 345], [390, 330], [345, 330], [330, 345], [330, 390], [345, 405], [0, 720], [15, 735], [720, 735], [735, 720], [720, 0], [735, 15], [0, 15], [15, 0], [0, 735], [735, 0], [240, 690], [255, 690], [270, 690], [285, 690], [300, 690], [330, 690], [405, 690], [420, 690], [435, 690], [450, 690], [465, 690], [495, 690], [315, 690], [480, 690], [510, 690], [525, 690], [540, 690], [555, 690], [225, 690], [210, 690], [195, 690], [180, 690], [165, 690], [570, 690], [150, 690], [135, 690], [120, 690], [105, 690], [45, 690], [45, 675], [45, 660], [45, 645], [45, 630], [45, 615], [45, 600], [45, 585], [45, 570], [45, 555], [45, 540], [45, 525], [45, 510], [45, 495], [45, 480], [45, 465], [45, 450], [45, 435], [45, 420], [45, 405], [45, 330], [45, 315], [45, 300], [45, 285], [45, 270], [45, 255], [45, 240], [45, 225], [45, 210], [45, 195], [45, 180], [45, 165], [45, 150], [45, 135], [45, 120], [45, 105], [45, 45], [60, 45], [75, 45], [90, 45], [105, 45], [120, 45], [135, 45], [150, 45], [165, 45], [180, 45], [210, 45], [195, 45], [225, 45], [240, 45], [255, 45], [270, 45], [285, 45], [300, 45], [315, 45], [330, 45], [405, 45], [420, 45], [435, 45], [450, 45], [465, 45], [480, 45], [495, 45], [510, 45], [525, 45], [540, 45], [555, 45], [570, 45], [585, 45], [600, 45], [615, 45], [630, 45], [690, 45], [690, 60], [690, 75], [690, 90], [690, 105], [690, 120], [690, 135], [690, 150], [690, 165], [690, 180], [690, 195], [690, 210], [690, 225], [690, 240], [690, 255], [690, 270], [690, 285], [690, 300], [690, 315], [690, 330], [690, 405], [690, 420], [690, 435], [690, 450], [690, 465], [690, 480], [690, 495], [690, 510], [690, 525], [690, 540], [690, 555], [690, 570], [690, 585], [690, 600], [690, 615], [690, 630], [690, 690], [675, 690], [660, 690], [645, 690], [630, 690], [615, 690], [600, 690], [585, 690], [330, 330], [405, 330], [330, 405], [405, 405], [525, 315], [540, 315], [540, 330], [540, 345], [540, 360], [540, 375], [540, 390], [540, 405], [540, 420], [525, 420], [420, 525], [420, 540], [405, 540], [390, 540], [375, 540], [360, 540], [345, 540], [330, 540], [315, 540], [315, 525], [210, 420], [195, 420], [195, 405], [195, 390], [195, 375], [195, 360], [195, 345], [195, 330], [195, 315], [210, 315], [315, 195], [330, 195], [345, 195], [360, 195], [375, 195], [390, 195], [405, 195], [420, 195], [420, 210], [315, 210], [120, 285], [120, 270], [270, 120], [285, 120], [120, 255], [135, 255], [135, 240], [135, 225], [150, 225], [150, 210], [150, 195], [165, 195], [165, 180], [165, 165], [255, 135], [240, 135], [225, 135], [255, 120], [225, 150], [210, 150], [195, 150], [195, 165], [180, 165], [450, 120], [465, 120], [480, 120], [480, 135], [495, 135], [510, 135], [510, 150], [525, 150], [540, 150], [540, 165], [555, 165], [570, 165], [570, 180], [570, 195], [585, 195], [585, 210], [585, 225], [600, 225], [600, 240], [600, 255], [615, 255], [615, 270], [615, 285], [615, 450], [615, 465], [615, 480], [600, 480], [600, 495], [600, 510], [585, 510], [585, 525], [585, 540], [570, 540], [570, 555], [570, 570], [555, 570], [540, 570], [540, 585], [525, 585], [510, 585], [510, 600], [495, 600], [480, 600], [480, 615], [465, 615], [450, 615], [285, 615], [270, 615], [255, 615], [255, 600], [240, 600], [225, 600], [225, 585], [210, 585], [195, 585], [195, 570], [180, 570], [165, 570], [165, 555], [165, 540], [150, 540], [150, 525], [150, 510], [135, 510], [135, 495], [135, 480], [120, 480], [120, 465], [120, 450], [150, 360], [135, 360], [120, 360], [105, 360], [90, 360], [150, 375], [135, 375], [120, 375], [105, 375], [90, 375], [360, 150], [375, 150], [375, 135], [375, 120], [375, 105], [375, 90], [360, 90], [360, 105], [360, 120], [360, 135], [585, 360], [585, 375], [600, 375], [615, 375], [630, 375], [630, 360], [615, 360], [600, 360], [645, 360], [645, 375], [375, 585], [360, 585], [360, 600], [360, 615], [360, 630], [360, 645], [375, 645], [375, 630], [375, 615], [375, 600], [720, 285], [720, 450], [15, 285], [15, 450], [450, 15], [285, 15], [450, 720], [285, 720], [90, 225], [90, 180], [90, 135], [90, 90], [135, 90], [180, 90], [225, 90], [135, 135], [510, 90], [555, 90], [600, 90], [645, 90], [645, 135], [645, 180], [645, 225], [600, 135], [645, 510], [645, 555], [645, 600], [645, 645], [600, 645], [555, 645], [510, 645], [600, 600], [90, 510], [225, 645], [180, 645], [135, 645], [90, 555], [90, 600], [135, 600], [90, 645], [15, 360], [30, 360], [45, 360], [60, 360], [75, 360], [75, 375], [60, 375], [45, 375], [30, 375], [15, 375], [660, 360], [675, 360], [690, 360], [705, 360], [720, 360], [720, 375], [705, 375], [690, 375], [675, 375], [660, 375], [375, 570], [375, 555], [360, 555], [360, 570], [375, 180], [375, 165], [360, 165], [360, 180]]

pantalla = pygame.display.set_mode((ANCHURA, ALTURA))
pygame.display.set_caption("Crear Mapas. Creado por: Javier Abollado")

font = pygame.font.Font(None, 30)
reloj = pygame.time.Clock()
fps = 100



def actualizar_screen():
    pantalla.fill(NEGRO)

    for pos in paredes:
        pygame.draw.rect(pantalla, COLOR_PARED, pygame.Rect(pos[0], pos[1], DIM, DIM))
    
    # cuadr√≠cula
    for i in range(NY+1): pygame.draw.rect(pantalla, GRIS, pygame.Rect(0, i*DIM-1, ANCHURA, 2))
    for i in range(NX+1): pygame.draw.rect(pantalla, GRIS, pygame.Rect(i*DIM-1, 0, 2, ALTURA))

    reloj.tick(fps)
    pygame.display.flip()

def convert(pos):
    x = pos[0] // 15
    y = pos[1] // 15
    new_pos = x*30, y*30
    return new_pos

def main():

    run = True
    buscar = False
    pausa = False

    while run:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

            # poner y quitar muros
            if pygame.mouse.get_pressed()[0]: # right
                pos = pygame.mouse.get_pos()
                x, y = pos[0] // DIM, pos[1] // DIM
                _pos = [DIM*x, DIM*y]
                if _pos not in paredes: 
                    paredes.append(list(_pos))

            if pygame.mouse.get_pressed()[2]: # left
                pos = pygame.mouse.get_pos()
                x, y = pos[0] // DIM, pos[1] // DIM
                _pos = [DIM*x, DIM*y]
                if _pos in paredes: 
                    paredes.remove(list(_pos))

            if event.type == pygame.KEYDOWN:

                if event.key == pygame.K_BACKSPACE:
                    paredes.clear()

        actualizar_screen()

    
    # paredes2 = []
    # for pos in paredes:
    #     paredes2.append(convert(pos))
    # print(paredes2)
    # print(paredes)



main()
pygame.quit()

